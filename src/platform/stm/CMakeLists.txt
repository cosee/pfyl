cmake_minimum_required(VERSION 3.17)

get_filename_component(PFYL_HOME
        "${CMAKE_CURRENT_LIST_DIR}/../../../"
        ABSOLUTE)

if (NOT DEFINED PFYL_HOME)
    MESSAGE(FATAL_ERROR "Please set the (absolute) pfyl home path")
ENDIF ()

if (NOT DEFINED ENV{STM32_FIRMWARE_REPO_PATH})
    MESSAGE(FATAL_ERROR "Please set the (absolute) path to the stm32 firmware repo")
ELSE()
    SET(STM32_FIRMWARE_REPO_PATH $ENV{STM32_FIRMWARE_REPO_PATH})
ENDIF ()

if (NOT DEFINED ENV{STM32_FIRMWARE_REPO_PATH})
    MESSAGE(FATAL_ERROR "Please set the (absolute) path to the stm32 firmware repo")
ELSE()
    SET(STM32_FIRMWARE_REPO_PATH $ENV{STM32_FIRMWARE_REPO_PATH})
ENDIF ()

if (NOT DEFINED ENV{TOOLCHAIN_PREFIX})
    MESSAGE(FATAL_ERROR "Please set the (absolute) path to the arm toolchain")
ELSE()
    SET(TOOLCHAIN_PREFIX $ENV{TOOLCHAIN_PREFIX})
ENDIF ()

SET(CMAKE_FIND_LIBRARY_PREFIXES "lib")
SET(CMAKE_FIND_LIBRARY_SUFFIXES ".so" ".a" ".dylib")
set(STM32_FAMILY F7)

set(STM32_CHIP STM32F746NG)
set(STM_BOARD STM32746G-Discovery)
set(STM32Cube_DIR ${STM32_FIRMWARE_REPO_PATH})
set(STM32BSP_INCLUDE_DIR ${STM32_FIRMWARE_REPO_PATH}/Drivers/BSP/STM32746G-Discovery)
set(STM32BSP_SOURCES ${STM32_FIRMWARE_REPO_PATH}/Drivers/BSP/STM32746G-Discovery)
set(TARGET_TRIPLET arm-none-eabi)
set(uGFX_DIR ${PFYL_HOME}/lib/ugfx)
set(CMAKE_TOOLCHAIN_FILE ${CMAKE_CURRENT_SOURCE_DIR}/cmake/gcc_stm32.cmake)

include(${PFYL_HOME}/src/CMakeLists.txt)
include(${PFYL_HOME}/lib/CMakeLists.txt)

project(f7-device)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
ENABLE_LANGUAGE(ASM)
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake")

SET(FREERTOS_HEAP_IMPL 4)
FIND_PACKAGE(CMSIS REQUIRED)
FIND_PACKAGE(STM32HAL COMPONENTS gpio uart tim sdram i2c dma REQUIRED)
FIND_PACKAGE(STM32BSP REQUIRED sdram)
FIND_PACKAGE(FreeRTOS REQUIRED)
FIND_PACKAGE(uGFX REQUIRED gos gos_freertos gdisp driver_STM32LTDC)

INCLUDE_DIRECTORIES(
        flow_impl
        common
        ${CMAKE_CURRENT_SOURCE_DIR}
        ${CMSIS_INCLUDE_DIRS}
        ${STM32HAL_INCLUDE_DIR}
        ${CMAKE_CURRENT_SOURCE_DIR}/f7
        ${FreeRTOS_INCLUDE_DIRS}
        ${STM32BSP_INCLUDE_DIR}
        ${uGFX_INCLUDE_DIRS}
        ${HEADER_FREERTOS_TRACE_DIRECTORY}
)


file(GLOB NANOPB_SRC_FILES
        "${NANOPB_SRC_ROOT_FOLDER}/*.c"
        )

SET(PROJECT_SOURCES
        f7/main.c
        f7/system_stm32f7xx.c
        f7/pfyl_mutex.c
        common/backpressure.c
        common/stm32f7xx_it.c
        ${NANOPB_SRCS}
        ${NANOPB_SRC_FILES}
        ${NANOPB_ENCODER_SOURCE_FILES}
        ${SINK_MODEL_SOURCE_FILE}
        ${SINK_ENTITY_SOURCE_FILE}
        ${SINK_LINEAR_SOURCE_FILES}
        ${FREERTOS_TRACE_SOURCE_FILES}
        )

add_compile_options("-Wa,-mimplicit-it=thumb")

list(JOIN NANOPB_SRC_FILES , NANO_PB_JOINED_SRCS)

add_definitions("-DUART1_ENABLED -DBACKPRESSURE_ENABLED -DRAW_ENCODER_ENABLED")

add_definitions("-DPFYL_USE_FREERTOS -DPFYL_PLATFORM_ARM -DPFYL_USE_STATIC_ALLOC")
SET(STM32_LINKER_SCRIPT ${CMSIS_LINKER_SCRIPT})

ADD_EXECUTABLE(${CMAKE_PROJECT_NAME} ${PROJECT_SOURCES} ${CMSIS_SOURCES} ${STM32HAL_SOURCES})
target_sources(${CMAKE_PROJECT_NAME} PUBLIC
        ${STM32BSP_SOURCES}
        ${FreeRTOS_SOURCES}
        ${uGFX_SOURCES}
        ${STM32Cube_DIR}/Drivers/BSP/${STM_BOARD}/stm32746g_discovery.c
        ${STM32Cube_DIR}/Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_ll_fmc.c)

target_link_options(${CMAKE_PROJECT_NAME} PUBLIC -specs=nano.specs -specs=nosys.specs)
STM32_SET_TARGET_PROPERTIES(${CMAKE_PROJECT_NAME})
STM32_ADD_HEX_BIN_TARGETS(${CMAKE_PROJECT_NAME})