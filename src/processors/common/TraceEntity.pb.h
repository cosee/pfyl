/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_PFYL_TRACEENTITY_PB_H_INCLUDED
#define PB_PFYL_TRACEENTITY_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _pfyl_TraceEntity {
    uint32_t type;
    uint64_t tick;
    bool has_data;
    uint64_t data;
    bool has_data2;
    uint64_t data2;
    bool has_data3;
    uint64_t data3;
} pfyl_TraceEntity;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define pfyl_TraceEntity_init_default            {0, 0, false, 0, false, 0, false, 0}
#define pfyl_TraceEntity_init_zero               {0, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define pfyl_TraceEntity_type_tag                1
#define pfyl_TraceEntity_tick_tag                2
#define pfyl_TraceEntity_data_tag                3
#define pfyl_TraceEntity_data2_tag               4
#define pfyl_TraceEntity_data3_tag               5

/* Struct field encoding specification for nanopb */
#define pfyl_TraceEntity_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   type,              1) \
X(a, STATIC,   REQUIRED, UINT64,   tick,              2) \
X(a, STATIC,   OPTIONAL, UINT64,   data,              3) \
X(a, STATIC,   OPTIONAL, UINT64,   data2,             4) \
X(a, STATIC,   OPTIONAL, UINT64,   data3,             5)
#define pfyl_TraceEntity_CALLBACK NULL
#define pfyl_TraceEntity_DEFAULT NULL

extern const pb_msgdesc_t pfyl_TraceEntity_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pfyl_TraceEntity_fields &pfyl_TraceEntity_msg

/* Maximum encoded size of messages (where known) */
#define pfyl_TraceEntity_size                    50

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
